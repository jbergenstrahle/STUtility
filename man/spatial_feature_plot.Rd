% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Visualization.R
\name{spatial_feature_plot}
\alias{spatial_feature_plot}
\title{Visualize 'features' on one selected HE image}
\usage{
spatial_feature_plot(
  object,
  features,
  sample.index = 1,
  spots = NULL,
  type = NULL,
  min.cutoff = NA,
  max.cutoff = NA,
  slot = "data",
  blend = FALSE,
  pt.size = 2,
  pt.alpha = 1,
  pt.border = FALSE,
  add.alpha = FALSE,
  palette = NULL,
  cols = NULL,
  spot.colors = NULL,
  ncol = NULL,
  grid.ncol = NULL,
  center.zero = FALSE,
  channels.use = NULL,
  verbose = FALSE,
  dark.theme = FALSE,
  show.sb = TRUE,
  value.scale = c("samplewise", "all"),
  label.by = NULL,
  ...
)
}
\arguments{
\item{object}{Seurat object}

\item{features}{\itemize{
    \item An \code{Assay} feature (e.g. a gene name - "MS4A1")
    \item A column name from meta.data (e.g. mitochondrial percentage - "percent.mito")
}}

\item{sample.index}{Index specifying the sample that you want to use for plotting}

\item{spots}{Character vector with spot IDs to plot [default: all spots]}

\item{type}{Image type to plot on. Here you can specify any of the images available in your Seurat object. To get this list you can
run the \code{\link{rasterlists}} function on your Seurat object. If the type is not specified, the images will be prioritized in the following
order if they are available; "processed", "masked" and "raw".}

\item{min.cutoff}{Vector of minimum and maximum cutoff values for each feature, may specify quantile in the form of 'q##' where '##'
is the quantile (eg, 'q1', 'q10'). This can be useful if you have outlier values that skew the colorscale in the plot. For example, if you specify
'q1', you will trim of values below the 1st percentile. [default: no cuttoffs]}

\item{max.cutoff}{Vector of minimum and maximum cutoff values for each feature, may specify quantile in the form of 'q##' where '##'
is the quantile (eg, 'q1', 'q10'). This can be useful if you have outlier values that skew the colorscale in the plot. For example, if you specify
'q1', you will trim of values below the 1st percentile. [default: no cuttoffs]}

\item{slot}{Which slot to pull expression data from? [dafault: 'data']}

\item{blend}{Scale and blend expression values to visualize coexpression of two features (this options will override other coloring parameters).
See 'Blending values' below for a more thourough description.}

\item{pt.size}{Point size of each ST spot [default: 1]}

\item{pt.alpha}{Opacity of each ST spot [default: 1]}

\item{pt.border}{Should a border be drawn around the spots? [default: TRUE]}

\item{add.alpha}{Scale spot opacity by selected feature. Higher values get more opaque while lower values make spots transparent.}

\item{palette}{Color palette used for spatial heatmap (see \code{palette.select(info = T)} for available options).
Disabled if a color vector is provided (see \code{cols} below).}

\item{cols}{A vector of colors to use for colorscale, e.g. \code{cols = c("blue", "white", "red")} will
create a gradient color scale going from blue to white to red. This options will deactivate the \code{palette}
option.}

\item{spot.colors}{Character vector with color names that overrides default coloring with ggplot2}

\item{ncol}{Number of columns to arrange the samples into. This can for example be useful to adjust if you want to visualize the samples
in just in one row or one column.}

\item{grid.ncol}{Number of columns for display when combining plots. This option will only have an effect on the sample level structure.}

\item{center.zero}{Specifies whther or not the colorscale should be centered around 0. For some values, such as Principal Component vectors,
the distribution of values is centered at 0 and in that case it can be appropriate to use a divergent colorscale with a predefined value for 0.
If this parameter is set to TRUE, the ggplot2 function \code{scale_color_gradient2} will be used to control the coloring instead of
\code{scale_color_gradientn}. If center.zero is set to FALSE, the colorscale will simply map the values in equally spaced intervals which could skew
the interpretaion of the output plot.}

\item{channels.use}{Color channels to use for blending. Has to be a character vector of length 2 or 3 with "red", "green" and "blue"
color names specified [default: c("red", "green", "blue)]}

\item{verbose}{Print messages}

\item{dark.theme}{Switches color of scalebar to 'white'}

\item{show.sb}{Should the size bar be displayed? [default: TRUE]}

\item{value.scale}{Defines how the feature values should be mapped to the colorbar. If `value.scale = "samplewise"`, each feature will be
scaled independently and if `value.scale = "all"` the features will all have the same value reange.}

\item{label.by}{Feature to relabel facets by. By default, facets are given a unique section number ranging grom 1 to the number of sections
available in the `Staffli` object. If you want to relabel these facets you can pass the name of a column that keeps the labels that you 
want to use. For example, if you wish to rename the facets to use labels defined by a charcater vector in column "section_id" in your
meta.data slot, you can pass `label.by = "section_id"` to relabel the facets. Only works for categorical group variables with where the 
number of groups is less than or equal to the number of tissue sections in your Staffli object.}

\item{...}{Extra parameters passed on to \code{\link{ST.ImagePlot}}}
}
\value{
A ggplot object
}
\description{
Colors spots on an an ST array grid according to a 'feature'
(i.e. gene expression (raw counts or scaled) and features available in the meta data slot).
NOTE that this function only draws a plot for one sample at the time.
}
